"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7908],{8130:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var s=t(5893),a=t(1151);const r={id:"CP4D",sidebar_position:1,title:"Cloud Pak for Data Installation",custom_edit_url:null},i=void 0,o={id:"Deployment/CP4D",title:"Cloud Pak for Data Installation",description:"Installing CP4D Cli",source:"@site/docs/02-Deployment/1-CP4D.mdx",sourceDirName:"02-Deployment",slug:"/Deployment/CP4D",permalink:"/solution-onprem-wxai/Deployment/CP4D",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"CP4D",sidebar_position:1,title:"Cloud Pak for Data Installation",custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"Deployment",permalink:"/solution-onprem-wxai/deployment"},next:{title:"Sample Page",permalink:"/solution-onprem-wxai/Use Cases/sample"}},c={},l=[{value:"Installing CP4D Cli",id:"installing-cp4d-cli",level:2},{value:"Download binary",id:"download-binary",level:3},{value:"Configure environmental vars",id:"configure-environmental-vars",level:3},{value:"Login to the cluster with cpd-cli",id:"login-to-the-cluster-with-cpd-cli",level:3},{value:"Retrieve the entitlement key",id:"retrieve-the-entitlement-key",level:3},{value:"Mirroring CPD Images to Private Registry",id:"mirroring-cpd-images-to-private-registry",level:2},{value:"Workstation can reach internet and cluster:",id:"workstation-can-reach-internet-and-cluster",level:3},{value:"Workstation used for install cannot reach internet:",id:"workstation-used-for-install-cannot-reach-internet",level:3},{value:"Save the olm-utils-v3 image",id:"save-the-olm-utils-v3-image",level:4},{value:"Transfer olm-utils-v3 to install workstation",id:"transfer-olm-utils-v3-to-install-workstation",level:4},{value:"Downloading CASE packages",id:"downloading-case-packages",level:3},{value:"Log into IBM Entitled Registry:",id:"log-into-ibm-entitled-registry",level:4},{value:"Download the CASE packages",id:"download-the-case-packages",level:4},{value:"(Optional) Download Watson Studio GPU Runtimes",id:"optional-download-watson-studio-gpu-runtimes",level:4},{value:"Mirror the images to the intermediary container registry",id:"mirror-the-images-to-the-intermediary-container-registry",level:4},{value:"Confirm that the images were mirrored to the intermediary container registry",id:"confirm-that-the-images-were-mirrored-to-the-intermediary-container-registry",level:4},{value:"Move images to registry in restricted network",id:"move-images-to-registry-in-restricted-network",level:3},{value:"Login in to Private Registry with CPD CLI",id:"login-in-to-private-registry-with-cpd-cli",level:4},{value:"Mirror images from intermediate registry to restricted registry",id:"mirror-images-from-intermediate-registry-to-restricted-registry",level:4},{value:"Confirm images are on restricted registry",id:"confirm-images-are-on-restricted-registry",level:4},{value:"Configure image content source policy",id:"configure-image-content-source-policy",level:3},{value:"Create or update the required image content source policy or image digest mirror set:",id:"create-or-update-the-required-image-content-source-policy-or-image-digest-mirror-set",level:4},{value:"Get status of nodes",id:"get-status-of-nodes",level:4},{value:"Pull olm-utils-v3 image from private container registry",id:"pull-olm-utils-v3-image-from-private-container-registry",level:4},{value:"Installing CP4D",id:"installing-cp4d",level:2},{value:"Authorizing instances",id:"authorizing-instances",level:3},{value:"Installation of shared components",id:"installation-of-shared-components",level:3},{value:"Setup instance topology",id:"setup-instance-topology",level:3},{value:"Installation of primary CPD components",id:"installation-of-primary-cpd-components",level:3},{value:"Installing Red Hat OpenShift Serverless Knative Eventing",id:"installing-red-hat-openshift-serverless-knative-eventing",level:3},{value:"Authorize the projects where the software will be installed to communicate",id:"authorize-the-projects-where-the-software-will-be-installed-to-communicate",level:4},{value:"Install the IBM Events Operator in the ibm-knative-events project",id:"install-the-ibm-events-operator-in-the-ibm-knative-events-project",level:4},{value:"Finally installing the OSKE",id:"finally-installing-the-oske",level:4},{value:"Installing the Cloud Pak for Data control plane and services",id:"installing-the-cloud-pak-for-data-control-plane-and-services",level:3},{value:"Generate a cpd-cli Profile",id:"generate-a-cpd-cli-profile",level:3},{value:"Installing our Cartridges",id:"installing-our-cartridges",level:2},{value:"Apply necessary Security Constraints",id:"apply-necessary-security-constraints",level:3},{value:"Watsonx Assistant",id:"watsonx-assistant",level:3},{value:"Apply the olm",id:"apply-the-olm",level:4},{value:"Validate the installation",id:"validate-the-installation",level:4},{value:"Create an instance of WA",id:"create-an-instance-of-wa",level:4},{value:"Create the service instance from the payload file:",id:"create-the-service-instance-from-the-payload-file",level:4},{value:"Validating that the service instance was created",id:"validating-that-the-service-instance-was-created",level:4},{value:"Watson Discovery",id:"watson-discovery",level:3},{value:"Apply the olm",id:"apply-the-olm-1",level:4},{value:"Validate the installation",id:"validate-the-installation-1",level:4},{value:"Create an instance of WD",id:"create-an-instance-of-wd",level:4},{value:"OpenPages",id:"openpages",level:3},{value:"Watson Studio",id:"watson-studio",level:3},{value:"Watson Machine Learning",id:"watson-machine-learning",level:3},{value:"IBM Knowledge Catalog",id:"ibm-knowledge-catalog",level:3},{value:"Watsonx Orchestrate",id:"watsonx-orchestrate",level:3},{value:"IBM App Connect",id:"ibm-app-connect",level:4},{value:"Installing Watsonx Orchestrate",id:"installing-watsonx-orchestrate",level:4},{value:"Troubleshooting WatsonX Orchestrate installation",id:"troubleshooting-watsonx-orchestrate-installation",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"installing-cp4d-cli",children:"Installing CP4D Cli"}),"\n",(0,s.jsx)(n.h3,{id:"download-binary",children:"Download binary"}),"\n",(0,s.jsx)(n.p,{children:"CP4D CLI can be found at the following link."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IBM/cpd-cli/releases/download/v14.0.0/cpd-cli-linux-EE-14.0.0.tgz",children:"https://github.com/IBM/cpd-cli/releases/download/v14.0.0/cpd-cli-linux-EE-14.0.0.tgz"})}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.p,{children:"This binary is for linux, if running from a windows machine, please use the linux binary but run it from Windows Subsystem for Linux."}),(0,s.jsx)(n.p,{children:"Also as of this writing the latest version of the cli is 14.0.0."})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"wget https://github.com/IBM/cpd-cli/releases/download/v14.0.0/cpd-cli-linux-EE-14.0.0.tgz\n"})}),"\n",(0,s.jsx)(n.p,{children:"Extract the files:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"tar xzvf https://github.com/IBM/cpd-cli/releases/download/v14.0.0/cpd-cli-linux-EE-14.0.0.tgz\n"})}),"\n",(0,s.jsx)(n.p,{children:"This will create the following directory:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli-linux-EE-14.0.0-288\n"})}),"\n",(0,s.jsx)(n.h3,{id:"configure-environmental-vars",children:"Configure environmental vars"}),"\n",(0,s.jsx)(n.p,{children:"The following creates a CPD env file"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'cat<<EOF> cpd_vars_5.sh\n#===============================================================================\n# Cloud Pak for Data installation variables\n#===============================================================================\n\n# ------------------------------------------------------------------------------\n# Client workstation \n# ------------------------------------------------------------------------------\n# Set the following variables if you want to override the default behavior of the Cloud Pak for Data CLI.\n#\n# To export these variables, you must uncomment each command in this section.\n\n# export CPD_CLI_MANAGE_WORKSPACE=<enter a fully qualified directory>\n# export OLM_UTILS_LAUNCH_ARGS=<enter launch arguments>\n\n\n# ------------------------------------------------------------------------------\n# Cluster\n# ------------------------------------------------------------------------------\n\nexport OCP_URL=<enter your Red Hat OpenShift Container Platform URL>\nexport OPENSHIFT_TYPE=<enter your deployment type>\nexport IMAGE_ARCH=<enter your cluster architecture>\n# export OCP_USERNAME=<enter your username>\n# export OCP_PASSWORD=<enter your password>\n# export OCP_TOKEN=<enter your token>\nexport SERVER_ARGUMENTS="--server=${OCP_URL}"\n# export LOGIN_ARGUMENTS="--username=${OCP_USERNAME} --password=${OCP_PASSWORD}"\n# export LOGIN_ARGUMENTS="--token=${OCP_TOKEN}"\nexport CPDM_OC_LOGIN="cpd-cli manage login-to-ocp ${SERVER_ARGUMENTS} ${LOGIN_ARGUMENTS}"\nexport OC_LOGIN="oc login ${OCP_URL} ${LOGIN_ARGUMENTS}"\n\n\n# ------------------------------------------------------------------------------\n# Proxy server\n# ------------------------------------------------------------------------------\n\n# export PROXY_HOST=<enter your proxy server hostname>\n# export PROXY_PORT=<enter your proxy server port number>\n# export PROXY_USER=<enter your proxy server username>\n# export PROXY_PASSWORD=<enter your proxy server password>\n\n\n# ------------------------------------------------------------------------------\n# Projects\n# ------------------------------------------------------------------------------\n\nexport PROJECT_CERT_MANAGER=<enter your certificate manager project>\nexport PROJECT_LICENSE_SERVICE=<enter your License Service project>\nexport PROJECT_SCHEDULING_SERVICE=<enter your scheduling service project>\n# export PROJECT_IBM_EVENTS=<enter your IBM Events Operator project>\n# export PROJECT_PRIVILEGED_MONITORING_SERVICE=<enter your privileged monitoring service project>\nexport PROJECT_CPD_INST_OPERATORS=<enter your Cloud Pak for Data operator project>\nexport PROJECT_CPD_INST_OPERANDS=<enter your Cloud Pak for Data operand project>\n# export PROJECT_CPD_INSTANCE_TETHERED=<enter your tethered project>\n# export PROJECT_CPD_INSTANCE_TETHERED_LIST=<a comma-separated list of tethered projects>\n\n\n\n# ------------------------------------------------------------------------------\n# Storage\n# ------------------------------------------------------------------------------\n\nexport STG_CLASS_BLOCK=<RWO-storage-class-name>\nexport STG_CLASS_FILE=<RWX-storage-class-name>\n\n# ------------------------------------------------------------------------------\n# IBM Entitled Registry\n# ------------------------------------------------------------------------------\n\nexport IBM_ENTITLEMENT_KEY=<enter your IBM entitlement API key>\n\n\n# ------------------------------------------------------------------------------\n# Private container registry\n# ------------------------------------------------------------------------------\n# Set the following variables if you mirror images to a private container registry.\n#\n# To export these variables, you must uncomment each command in this section.\n\n# export PRIVATE_REGISTRY_LOCATION=<enter the location of your private container registry>\n# export PRIVATE_REGISTRY_PUSH_USER=<enter the username of a user that can push to the registry>\n# export PRIVATE_REGISTRY_PUSH_PASSWORD=<enter the password of the user that can push to the registry>\n# export PRIVATE_REGISTRY_PULL_USER=<enter the username of a user that can pull from the registry>\n# export PRIVATE_REGISTRY_PULL_PASSWORD=<enter the password of the user that can pull from the registry>\n\n\n# ------------------------------------------------------------------------------\n# Cloud Pak for Data version\n# ------------------------------------------------------------------------------\n\nexport VERSION=5.0.0\n\n\n# ------------------------------------------------------------------------------\n# Components\n# ------------------------------------------------------------------------------\n\nexport COMPONENTS=ibm-cert-manager,ibm-licensing,scheduler,cpfs,cpd_platform\n# export COMPONENTS_TO_SKIP=<component-ID-1>,<component-ID-2>\n\n\n# ------------------------------------------------------------------------------\n# watsonx Orchestrate\n# ------------------------------------------------------------------------------\n# export PROJECT_IBM_APP_CONNECT=<enter your IBM App Connect in containers project>\n# export AC_CASE_VERSION=<version>\n# export AC_CHANNEL_VERSION=<version>\nEOF\n'})}),"\n",(0,s.jsxs)(n.p,{children:["You will need to open the resultant ",(0,s.jsx)(n.code,{children:"cpd_vars_50.sh"})," file and update the following vars:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"OCP_URL\nOCP_PASSWORD\nIBM_ENTITLEMENT_KEY\n"})}),"\n",(0,s.jsxs)(n.p,{children:["By default we set our storage classes to the ",(0,s.jsx)(n.code,{children:"nfs-client"})," storage class. Your mileage may vary."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"OCP_URL"})," can be pulled with this command:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"oc cluster-info\nKubernetes control plane is running at https://api.test.ibmwtests.local:6443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The kubeadmin password can be found in the build directory for the cluster under ",(0,s.jsx)(n.code,{children:"auth/kubeadmin-password"})]}),"\n",(0,s.jsx)(n.h3,{id:"login-to-the-cluster-with-cpd-cli",children:"Login to the cluster with cpd-cli"}),"\n",(0,s.jsx)(n.p,{children:"Source the env file"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"source cpd_vars_50.sh"})}),"\n",(0,s.jsx)(n.p,{children:"login with cpd-cli"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"cpd-cli manage login-to-ocp \\\n--username=${OCP_USERNAME} \\\n--password=${OCP_PASSWORD} \\\n--server=${OCP_URL}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"retrieve-the-entitlement-key",children:"Retrieve the entitlement key"}),"\n",(0,s.jsxs)(n.p,{children:["The key can be retrieved from ",(0,s.jsx)(n.a,{href:"https://myibm.ibm.com/products-services/containerlibrary",children:"here"})]}),"\n",(0,s.jsx)(n.h2,{id:"mirroring-cpd-images-to-private-registry",children:"Mirroring CPD Images to Private Registry"}),"\n",(0,s.jsx)(n.h3,{id:"workstation-can-reach-internet-and-cluster",children:"Workstation can reach internet and cluster:"}),"\n",(0,s.jsx)(n.p,{children:"When the workstation is connected to the internet, run the following command to update the olm-utils-v3 image on the workstation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"cpd-cli manage restart-container \n"})}),"\n",(0,s.jsx)(n.h3,{id:"workstation-used-for-install-cannot-reach-internet",children:"Workstation used for install cannot reach internet:"}),"\n",(0,s.jsx)(n.h4,{id:"save-the-olm-utils-v3-image",children:"Save the olm-utils-v3 image"}),"\n",(0,s.jsx)(n.p,{children:"Run the following command to save the olm-utils-v3 image to the client workstation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"cpd-cli manage save-image --from=icr.io/cpopen/cpd/olm-utils-v3:latest\n"})}),"\n",(0,s.jsx)(n.h4,{id:"transfer-olm-utils-v3-to-install-workstation",children:"Transfer olm-utils-v3 to install workstation"}),"\n",(0,s.jsx)(n.p,{children:"Run the following command to load the olm-utils-v3 image on the client workstation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"cpd-cli manage load-image --source-image=icr.io/cpopen/cpd/olm-utils-v3:latest\n"})}),"\n",(0,s.jsx)(n.p,{children:"Set the OLM_UTILS_IMAGE environment variable to ensure that the cpd-cli uses the version of the image on the client workstation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"export OLM_UTILS_IMAGE=icr.io/cpopen/cpd/olm-utils-v3:latest\n"})}),"\n",(0,s.jsx)(n.h3,{id:"downloading-case-packages",children:"Downloading CASE packages"}),"\n",(0,s.jsx)(n.p,{children:"Run the appropriate command depending on the site from which you plan to download the CASE packages:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"cpd-cli manage case-download \\\n--components=${COMPONENTS} \\\n--release=${VERSION}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Change the permissions of the work directory"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"chown -R 1001 ./work\nchmod -R 775 ./work\n"})}),"\n",(0,s.jsx)(n.p,{children:"Restart the container"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"cpd-cli manage restart-container\n"})}),"\n",(0,s.jsx)(n.h4,{id:"log-into-ibm-entitled-registry",children:"Log into IBM Entitled Registry:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"cpd-cli manage login-entitled-registry ${IBM_ENTITLEMENT_KEY}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"download-the-case-packages",children:"Download the CASE packages"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"cpd-cli manage list-images \\\n--components=${COMPONENTS} \\\n--release=${VERSION} \\\n--inspect_source_registry=true\n"})}),"\n",(0,s.jsx)(n.h4,{id:"optional-download-watson-studio-gpu-runtimes",children:"(Optional) Download Watson Studio GPU Runtimes"}),"\n",(0,s.jsx)(n.p,{children:"If you are mirroring the images for Watson Studio, you can choose which Watson Studio Runtimes images are mirrored."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sed -i -e '/gpu/d' ./cpd-cli-workspace/olm-utils-workspace/work/offline/${VERSION}/.ibm-pak/data/cases/ibm-wsl-runtimes/*/ibm-wsl-runtimes-*-images.csv\n"})}),"\n",(0,s.jsx)(n.h4,{id:"mirror-the-images-to-the-intermediary-container-registry",children:"Mirror the images to the intermediary container registry"}),"\n",(0,s.jsx)(n.p,{children:"The command automatically sets up an intermediary container registry on the client workstation. The address of the intermediary container registry is 127.0.0.1:12443."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"cpd-cli manage mirror-images \\\n--components=${COMPONENTS} \\\n--release=${VERSION} \\\n--target_registry=127.0.0.1:12443 \\\n--arch=${IMAGE_ARCH} \\\n--case_download=false\n"})}),"\n",(0,s.jsx)(n.h4,{id:"confirm-that-the-images-were-mirrored-to-the-intermediary-container-registry",children:"Confirm that the images were mirrored to the intermediary container registry"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"cpd-cli manage list-images \\\n--components=${COMPONENTS} \\\n--release=${VERSION} \\\n--target_registry=127.0.0.1:12443 \\\n--case_download=false\n"})}),"\n",(0,s.jsx)(n.h3,{id:"move-images-to-registry-in-restricted-network",children:"Move images to registry in restricted network"}),"\n",(0,s.jsx)(n.h4,{id:"login-in-to-private-registry-with-cpd-cli",children:"Login in to Private Registry with CPD CLI"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"cpd-cli manage login-private-registry \\\n${PRIVATE_REGISTRY_LOCATION} \\\n${PRIVATE_REGISTRY_PUSH_USER} \\\n${PRIVATE_REGISTRY_PUSH_PASSWORD}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"mirror-images-from-intermediate-registry-to-restricted-registry",children:"Mirror images from intermediate registry to restricted registry"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"cpd-cli manage mirror-images \\\n--components=${COMPONENTS} \\\n--release=${VERSION} \\\n--source_registry=127.0.0.1:12443 \\\n--target_registry=${PRIVATE_REGISTRY_LOCATION} \\\n--arch=${IMAGE_ARCH} \\\n--case_download=false\n"})}),"\n",(0,s.jsx)(n.h4,{id:"confirm-images-are-on-restricted-registry",children:"Confirm images are on restricted registry"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"cpd-cli manage list-images \\\n--components=${COMPONENTS} \\\n--release=${VERSION} \\\n--target_registry=${PRIVATE_REGISTRY_LOCATION} \\\n--case_download=false\n"})}),"\n",(0,s.jsx)(n.h3,{id:"configure-image-content-source-policy",children:"Configure image content source policy"}),"\n",(0,s.jsx)(n.p,{children:"If you mirror images to a private container registry, you must tell your cluster where to find the software images by creating an image content source policy or image digest mirror set."}),"\n",(0,s.jsx)(n.h4,{id:"create-or-update-the-required-image-content-source-policy-or-image-digest-mirror-set",children:"Create or update the required image content source policy or image digest mirror set:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"cpd-cli manage apply-icsp \\\n--registry=${PRIVATE_REGISTRY_LOCATION}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"get-status-of-nodes",children:"Get status of nodes"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"oc get nodes\n"})}),"\n",(0,s.jsx)(n.h4,{id:"pull-olm-utils-v3-image-from-private-container-registry",children:"Pull olm-utils-v3 image from private container registry"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"export OLM_UTILS_IMAGE=${PRIVATE_REGISTRY_LOCATION}/cpopen/cpd/olm-utils-v3:${VERSION}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"installing-cp4d",children:"Installing CP4D"}),"\n",(0,s.jsx)(n.h3,{id:"authorizing-instances",children:"Authorizing instances"}),"\n",(0,s.jsx)(n.p,{children:"This step creates all required projects, creates the NamespaceScope operator in the operators project, and binds the applied role to the service account of the NamespaceScope operator."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage authorize-instance-topology \\\n--cpd_operator_ns=${PROJECT_CPD_INST_OPERATORS} \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS}\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"This was successful"})}),"\n",(0,s.jsx)(n.h3,{id:"installation-of-shared-components",children:"Installation of shared components"}),"\n",(0,s.jsxs)(n.p,{children:["These two tasks come from here:\n",(0,s.jsx)(n.a,{href:"https://www.ibm.com/docs/en/cloud-paks/cp-data/4.8.x?topic=cluster-installing-shared-components",children:"https://www.ibm.com/docs/en/cloud-paks/cp-data/4.8.x?topic=cluster-installing-shared-components"})]}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsxs)(n.p,{children:["If you are unable to access github, include the following flags to the next two commands as well as ",(0,s.jsx)(n.em,{children:"any"})," ",(0,s.jsx)(n.code,{children:"apply-olm"})," command below"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"--case_download=true \\\n--from_oci=true\n"})})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-cluster-components \\\n--release=${VERSION} \\\n--license_acceptance=true \\\n--cert_manager_ns=${PROJECT_CERT_MANAGER} \\\n--licensing_ns=${PROJECT_LICENSE_SERVICE}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Install the scheduler"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-scheduler \\\n--release=${VERSION} \\\n--license_acceptance=true \\\n--scheduler_ns=${PROJECT_SCHEDULING_SERVICE}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"setup-instance-topology",children:"Setup instance topology"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage setup-instance-topology \\\n--release=${VERSION} \\\n--cpd_operator_ns=${PROJECT_CPD_INST_OPERATORS} \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--license_acceptance=true \\\n--block_storage_class=${STG_CLASS_BLOCK}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"installation-of-primary-cpd-components",children:"Installation of primary CPD components"}),"\n",(0,s.jsx)(n.p,{children:"This installs the operators in the operators project for the instance."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-olm \\\n--release=${VERSION} \\\n--cpd_operator_ns=${PROJECT_CPD_INST_OPERATORS} \\\n--components=${COMPONENTS}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"installing-red-hat-openshift-serverless-knative-eventing",children:"Installing Red Hat OpenShift Serverless Knative Eventing"}),"\n",(0,s.jsxs)(n.p,{children:["Red Hat OpenShift Serverless Knative Eventing and IBM Events are required for ",(0,s.jsx)(n.strong,{children:"watsonx Assistant"})]}),"\n",(0,s.jsx)(n.h4,{id:"authorize-the-projects-where-the-software-will-be-installed-to-communicate",children:"Authorize the projects where the software will be installed to communicate"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage authorize-instance-topology \\\n--release=${VERSION} \\\n--cpd_operator_ns=ibm-knative-events \\\n--cpd_instance_ns=knative-eventing\n"})}),"\n",(0,s.jsx)(n.h4,{id:"install-the-ibm-events-operator-in-the-ibm-knative-events-project",children:"Install the IBM Events Operator in the ibm-knative-events project"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage setup-instance-topology \\\n--release=${VERSION} \\\n--cpd_operator_ns=ibm-knative-events \\\n--cpd_instance_ns=knative-eventing \\\n--license_acceptance=true\n"})}),"\n",(0,s.jsx)(n.h4,{id:"finally-installing-the-oske",children:"Finally installing the OSKE"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage deploy-knative-eventing \\\n--release=${VERSION} \\\n--block_storage_class=${STG_CLASS_BLOCK}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"installing-the-cloud-pak-for-data-control-plane-and-services",children:"Installing the Cloud Pak for Data control plane and services"}),"\n",(0,s.jsx)(n.p,{children:"This installs the operands in the operands project for the instance:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-cr \\\n--release=${VERSION} \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--components=${COMPONENTS} \\\n--block_storage_class=${STG_CLASS_BLOCK} \\\n--file_storage_class=${STG_CLASS_FILE} \\\n--license_acceptance=true\n"})}),"\n",(0,s.jsx)(n.p,{children:"This is a big one, so it might take a little while. When it completes, verify the operands are up:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage get-cr-status \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This should return a ",(0,s.jsx)(n.code,{children:"Completed"})," status."]}),"\n",(0,s.jsx)(n.p,{children:"The routes should be created and ready at this point. You can retrieve the web-url for the client with the following command:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage get-cpd-instance-details \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--get_admin_initial_credentials=true\n"})}),"\n",(0,s.jsx)(n.h3,{id:"generate-a-cpd-cli-profile",children:"Generate a cpd-cli Profile"}),"\n",(0,s.jsxs)(n.p,{children:["Log into the CP4D webui with the info retrieved from the ",(0,s.jsx)(n.code,{children:"get-cpd-instance-details"})," and go to your Profile and settings page in the Cloud Pak for Data client and clicking Generate API key."]}),"\n",(0,s.jsxs)(n.p,{children:["In the upper right hand corner, click ",(0,s.jsx)(n.code,{children:"API key"})," -> ",(0,s.jsx)(n.code,{children:"Generate new key"})]}),"\n",(0,s.jsx)(n.p,{children:"Copy the generated key."}),"\n",(0,s.jsx)(n.p,{children:"Collect the web client URL and export it with the following command"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"export CPD_PROFILE_URL=$(oc get route cpd --namespace=${PROJECT_CPD_INST_OPERANDS} | tail -1 | awk '{print \"https://\"$2}')\n"})}),"\n",(0,s.jsxs)(n.p,{children:["We'll set our ",(0,s.jsx)(n.code,{children:"profile-name"})," to the cluster name."]}),"\n",(0,s.jsx)(n.p,{children:"Set the following vars:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"export API_KEY=<key you copied above>\nexport CPD_ADMIN_USER=cpadmin\nexport LOCAL_USER=<local user name>\nexport CPD_PROFILE_NAME=wxai\n"})}),"\n",(0,s.jsx)(n.p,{children:"Create a local user configuration to store your username and API key by using the config users set command."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli config users set ${LOCAL_USER} \\\n--username ${CPD_ADMIN_USER} \\\n--apikey ${API_KEY}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Create a profile to store the Cloud Pak for Data URL and to associate the profile with your local user configuration by using the config profiles set command."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli config profiles set ${CPD_PROFILE_NAME} \\\n--user ${LOCAL_USER} \\\n--url ${CPD_PROFILE_URL}\n"})}),"\n",(0,s.jsx)(n.p,{children:"You can now run cpd-cli commands with this profile as shown in the following example."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli service-instance list \\\n--profile=${CPD_PROFILE_NAME}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"installing-our-cartridges",children:"Installing our Cartridges"}),"\n",(0,s.jsx)(n.p,{children:"Source the env file"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"source cpd_vars_48.sh"})}),"\n",(0,s.jsx)(n.p,{children:"Login with cpd-cli"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"cpd-cli manage login-to-ocp \\\n--username=${OCP_USERNAME} \\\n--password=${OCP_PASSWORD} \\\n--server=${OCP_URL}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"apply-necessary-security-constraints",children:"Apply necessary Security Constraints"}),"\n",(0,s.jsx)(n.p,{children:"The apply-db2-kubelet command makes the following changes to the cluster nodes:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'allowedUnsafeSysctls:\n  - "kernel.msg*"\n  - "kernel.shm*"\n  - "kernel.sem"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-db2-kubelet\n"})}),"\n",(0,s.jsx)(n.p,{children:"This might take a bit as the workers will be getting bounced."}),"\n",(0,s.jsx)(n.h3,{id:"watsonx-assistant",children:"Watsonx Assistant"}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsxs)(n.p,{children:["By default the deployment size for WA is ",(0,s.jsx)(n.code,{children:"Production"}),". If we want to go with something larger, we need to deploy with an ",(0,s.jsx)(n.code,{children:"options"})," file."]}),(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"install-options.yml"})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"################################################################################\n# watsonx Assistant parameters\n################################################################################\nwatson_assistant_size: Production\nwatson_assistant_bigpv: false\nwatson_assistant_analytics_enabled: true\n"})}),(0,s.jsx)(n.p,{children:"The default Production size in this case is more the suited for our purposes."})]}),"\n",(0,s.jsx)(n.h4,{id:"apply-the-olm",children:"Apply the olm"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-olm \\\n--release=${VERSION} \\\n--cpd_operator_ns=${PROJECT_CPD_INST_OPERATORS} \\\n--components=watson_assistant\n"})}),"\n",(0,s.jsx)(n.p,{children:"And run the install command"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-cr \\\n--components=watson_assistant \\\n--release=${VERSION} \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--block_storage_class=${STG_CLASS_BLOCK} \\\n--file_storage_class=${STG_CLASS_FILE} \\\n--license_acceptance=true\n"})}),"\n",(0,s.jsx)(n.h4,{id:"validate-the-installation",children:"Validate the installation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage get-cr-status \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--components=watson_assistant\n"})}),"\n",(0,s.jsx)(n.h4,{id:"create-an-instance-of-wa",children:"Create an instance of WA"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://www.ibm.com/docs/en/cloud-paks/cp-data/4.8.x?topic=csi-creating-service-instance-cpd-cli-service-instance-create-2",children:"https://www.ibm.com/docs/en/cloud-paks/cp-data/4.8.x?topic=csi-creating-service-instance-cpd-cli-service-instance-create-2"})}),"\n",(0,s.jsxs)(n.p,{children:["Set the INSTANCE_NAME environment variable to the unique name that you want to use as the display name for the service instance. We're just going to call this ",(0,s.jsx)(n.code,{children:"wa-instance"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'export INSTANCE_NAME="wa-instance"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'export CPD_PROFILE_NAME="wxai"\n'})}),"\n",(0,s.jsx)(n.p,{children:"Set the INSTANCE_VERSION env var to the version that corresponds to the version of CP4D. As of this writing and this guide, we are using 4.8.4. The Service instance version must match the release of CP4D."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"export INSTANCE_VERSION=4.8.4\n"})}),"\n",(0,s.jsx)(n.p,{children:"Create the assistant-instance.json payload file:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'cat << EOF > ./assistant-instance.json\n{\n    "addon_type": "assistant",\n    "display_name": "${INSTANCE_NAME}",\n    "namespace": "${PROJECT_CPD_INST_OPERANDS}",\n    "addon_version": "${INSTANCE_VERSION}",\n    "create_arguments": {\n        "deployment_id": "${PROJECT_CPD_INST_OPERANDS}-wa", \n\t     "parameters": { \n\t         "serviceId": "assistant", \n\t         "url": "https://wa-store.${PROJECT_CPD_INST_OPERANDS}.svc.cluster.local:443/csb/v2/service_instances", \n\t         "watson": true \n        }\n    }\n}\nEOF\n'})}),"\n",(0,s.jsx)(n.p,{children:"Set the PAYLOAD_FILE environment variable to the fully qualified name of the JSON payload file"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"export PAYLOAD_FILE=/path/to/whereever/this/file/is/assistant-instance.json\n"})}),"\n",(0,s.jsx)(n.h4,{id:"create-the-service-instance-from-the-payload-file",children:"Create the service instance from the payload file:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli service-instance create \\\n--profile=${CPD_PROFILE_NAME} \\\n--from-source=${PAYLOAD_FILE}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"validating-that-the-service-instance-was-created",children:"Validating that the service instance was created"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli service-instance status ${INSTANCE_NAME} \\\n--profile=${CPD_PROFILE_NAME} \\\n--output=json\n"})}),"\n",(0,s.jsx)(n.h3,{id:"watson-discovery",children:"Watson Discovery"}),"\n",(0,s.jsx)(n.h4,{id:"apply-the-olm-1",children:"Apply the olm"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-olm \\\n--release=${VERSION} \\\n--cpd_operator_ns=${PROJECT_CPD_INST_OPERATORS} \\\n--components=watson_discovery\n"})}),"\n",(0,s.jsx)(n.p,{children:"And then apply the CR"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-cr \\\n--components=watson_discovery \\\n--release=${VERSION} \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--block_storage_class=${STG_CLASS_BLOCK} \\\n--file_storage_class=${STG_CLASS_FILE} \\\n--license_acceptance=true\n"})}),"\n",(0,s.jsx)(n.h4,{id:"validate-the-installation-1",children:"Validate the installation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage get-cr-status \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--components=watson_discovery\n"})}),"\n",(0,s.jsx)(n.h4,{id:"create-an-instance-of-wd",children:"Create an instance of WD"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"TBD"})}),"\n",(0,s.jsx)(n.h3,{id:"openpages",children:"OpenPages"}),"\n",(0,s.jsx)(n.p,{children:"Run the following command to create the required OLM objects for OpenPages in the operators project for the instance:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-olm \\\n--release=${VERSION} \\\n--cpd_operator_ns=${PROJECT_CPD_INST_OPERATORS} \\\n--components=openpages\n"})}),"\n",(0,s.jsx)(n.p,{children:"Create the custom resource for OpenPages"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-cr \\\n--components=openpages \\\n--release=${VERSION} \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--license_acceptance=true\n"})}),"\n",(0,s.jsx)(n.p,{children:"Validate the installation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage get-cr-status \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--components=openpages\n"})}),"\n",(0,s.jsx)(n.p,{children:"Create a service instance"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://www.ibm.com/docs/en/cloud-paks/cp-data/4.8.x?topic=csi-creating-service-instance-cpd-cli-service-instance-create-14",children:"https://www.ibm.com/docs/en/cloud-paks/cp-data/4.8.x?topic=csi-creating-service-instance-cpd-cli-service-instance-create-14"})}),"\n",(0,s.jsx)(n.h3,{id:"watson-studio",children:"Watson Studio"}),"\n",(0,s.jsx)(n.p,{children:"Run the following command to create the required OLM objects for Watson Studio in the operators project for the instance:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-olm \\\n--release=${VERSION} \\\n--cpd_operator_ns=${PROJECT_CPD_INST_OPERATORS} \\\n--components=ws\n"})}),"\n",(0,s.jsx)(n.p,{children:"Create the custom resource"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-cr \\\n--components=ws \\\n--release=${VERSION} \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--block_storage_class=${STG_CLASS_BLOCK} \\\n--file_storage_class=${STG_CLASS_FILE} \\\n--license_acceptance=true\n"})}),"\n",(0,s.jsx)(n.p,{children:"Validate the installation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage get-cr-status \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--components=ws\n"})}),"\n",(0,s.jsx)(n.h3,{id:"watson-machine-learning",children:"Watson Machine Learning"}),"\n",(0,s.jsx)(n.p,{children:"Apply the olm"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-olm \\\n--release=${VERSION} \\\n--cpd_operator_ns=${PROJECT_CPD_INST_OPERATORS} \\\n--components=wml\n"})}),"\n",(0,s.jsx)(n.p,{children:"Apply the CR"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-cr \\\n--components=wml \\\n--release=${VERSION} \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--block_storage_class=${STG_CLASS_BLOCK} \\\n--file_storage_class=${STG_CLASS_FILE} \\\n--license_acceptance=true\n"})}),"\n",(0,s.jsx)(n.p,{children:"Verify the installation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage get-cr-status \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--components=ws\n"})}),"\n",(0,s.jsx)(n.h3,{id:"ibm-knowledge-catalog",children:"IBM Knowledge Catalog"}),"\n",(0,s.jsx)(n.p,{children:"Run the following command to create the required OLM objects for IBM Knowledge Catalog in the operators project for the instance:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-olm \\\n--release=${VERSION} \\\n--cpd_operator_ns=${PROJECT_CPD_INST_OPERATORS} \\\n--components=wkc\n"})}),"\n",(0,s.jsx)(n.p,{children:"We're using default options for this installation, so kick off the following CR"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-cr \\\n--components=wkc \\\n--release=${VERSION} \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--block_storage_class=${STG_CLASS_BLOCK} \\\n--file_storage_class=${STG_CLASS_FILE} \\\n--license_acceptance=true\n"})}),"\n",(0,s.jsx)(n.h3,{id:"watsonx-orchestrate",children:"Watsonx Orchestrate"}),"\n",(0,s.jsx)(n.h4,{id:"ibm-app-connect",children:"IBM App Connect"}),"\n",(0,s.jsx)(n.p,{children:"IBM App Connect is a requirement for Watsonx Orchestrate"}),"\n",(0,s.jsxs)(n.p,{children:["Make sure to set these vars in ",(0,s.jsx)(n.code,{children:"cpd_vars_48.sh"})]}),"\n",(0,s.jsx)(n.p,{children:"We are using CP4D 4.8.4, so the following vars are valid:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"export PROJECT_IBM_APP_CONNECT=appconnect\nexport AC_CASE_VERSION=11.3.0\nexport AC_CHANNEL_VERSION=v11.3\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Now source the ",(0,s.jsx)(n.code,{children:"cpd_vars_48.sh"})," file"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"source ./cpd_vars_48.sh\n"})}),"\n",(0,s.jsx)(n.p,{children:"Download the IBM App Connect case file"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"curl -sSLO https://github.com/IBM/cloud-pak/raw/master/repo/case/ibm-appconnect/${AC_CASE_VERSION}/ibm-appconnect-${AC_CASE_VERSION}.tgz\n"})}),"\n",(0,s.jsxs)(n.p,{children:["You should have in your home directory ",(0,s.jsx)(n.code,{children:"ibm-appconnect-11.3.0.tgz"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Extract the file with"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"tar xvf ibm-appconnect-${AC_CASE_VERSION}.tgz\n"})}),"\n",(0,s.jsx)(n.p,{children:"Login to the cluster with cpd-cli"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"cpd-cli manage login-to-ocp \\\n--username=${OCP_USERNAME} \\\n--password=${OCP_PASSWORD} \\\n--server=${OCP_URL}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Create the project for App Connect"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"oc new-project ${PROJECT_IBM_APP_CONNECT} --display-name 'IBM App Connect'\n"})}),"\n",(0,s.jsx)(n.p,{children:"Create the catalog source for the App Connect operator"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'oc patch \\\n--filename=ibm-appconnect/inventory/ibmAppconnect/files/op-olm/catalog_source.yaml \\\n--type=merge \\\n-o yaml \\\n--patch="{\\"metadata\\":{\\"namespace\\":\\"${PROJECT_IBM_APP_CONNECT}\\"}}" \\\n--dry-run=client \\\n| oc apply -n ${PROJECT_IBM_APP_CONNECT} -f -\n'})}),"\n",(0,s.jsx)(n.p,{children:"Create the operator group for the App Connect operator:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cat <<EOF | oc apply -f -\n  apiVersion: operators.coreos.com/v1\n  kind: OperatorGroup\n  metadata:\n    name: appconnect-og\n    namespace: ${PROJECT_IBM_APP_CONNECT}\n  spec:\n    targetNamespaces:\n    - ${PROJECT_IBM_APP_CONNECT}\n    upgradeStrategy: Default\nEOF\n"})}),"\n",(0,s.jsx)(n.p,{children:"Now create the subscription for the AC operator"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'cat <<EOF | oc apply -f -\n  apiVersion: operators.coreos.com/v1alpha1\n  kind: Subscription\n  metadata:\n    name: ibm-appconnect-operator\n    namespace: ${PROJECT_IBM_APP_CONNECT}\n  spec:\n    channel: ${AC_CHANNEL_VERSION}\n    config:\n      env:\n      - name: ACECC_ENABLE_PUBLIC_API\n        value: "true"\n    installPlanApproval: Automatic\n    name: ibm-appconnect\n    source: appconnect-operator-catalogsource\n    sourceNamespace: ${PROJECT_IBM_APP_CONNECT}\nEOF\n'})}),"\n",(0,s.jsx)(n.p,{children:"Now wait for the operator to come online"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"oc wait csv \\\n--namespace=${PROJECT_IBM_APP_CONNECT} \\\n--selector=operators.coreos.com/ibm-appconnect.${PROJECT_IBM_APP_CONNECT}='' \\\n--for='jsonpath={.status.phase}'=Succeeded\n"})}),"\n",(0,s.jsx)(n.h4,{id:"installing-watsonx-orchestrate",children:"Installing Watsonx Orchestrate"}),"\n",(0,s.jsx)(n.p,{children:"Once the App Connect operator is up and running, we can move on to installing Watsonx Orchestrate"}),"\n",(0,s.jsxs)(n.p,{children:["source the ",(0,s.jsx)(n.code,{children:"cpd_vars_48.sh"})," file"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"source ./cpd_vars_48.sh\n"})}),"\n",(0,s.jsx)(n.p,{children:"Login to the cluster with cpd-cli"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"cpd-cli manage login-to-ocp \\\n--username=${OCP_USERNAME} \\\n--password=${OCP_PASSWORD} \\\n--server=${OCP_URL}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Create an instance of App Connect for watsonx Orchestrate"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage setup-appconnect \\\n--appconnect_ns=${PROJECT_IBM_APP_CONNECT} \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--release=${VERSION} \\\n--components=watsonx_orchestrate \\\n--file_storage_class=${STG_CLASS_FILE}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Set the CPD_USERNAME environment variable to your Cloud Pak for Data username:"}),"\n",(0,s.jsx)(n.p,{children:"This should be the cpd admin user you created when you ran the tasks."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"export CPD_USERNAME=cpadmin\n"})}),"\n",(0,s.jsx)(n.p,{children:"Create the required watsonx Assistant service instances for watsonx Orchestrate."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage setup-wxo-assistant \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--create_assistants=true \\\n--user=${CPD_USERNAME} \\\n--auth_type=apikey\n"})}),"\n",(0,s.jsx)(n.p,{children:"Input the apikey you generated when you created the cpd-cli profile."}),"\n",(0,s.jsx)(n.p,{children:"Apply the olm"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-olm \\\n--release=${VERSION} \\\n--cpd_operator_ns=${PROJECT_CPD_INST_OPERATORS} \\\n--components=watsonx_orchestrate\n"})}),"\n",(0,s.jsx)(n.p,{children:"When that command returns, apply the Custom Resource"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage apply-cr \\\n--components=watsonx_orchestrate \\\n--release=${VERSION} \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--block_storage_class=${STG_CLASS_BLOCK} \\\n--file_storage_class=${STG_CLASS_FILE} \\\n--license_acceptance=true\n"})}),"\n",(0,s.jsx)(n.p,{children:"Verify the the cr was applied successfully with this command"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"cpd-cli manage get-cr-status \\\n--cpd_instance_ns=${PROJECT_CPD_INST_OPERANDS} \\\n--components=watsonx_orchestrate\n"})}),"\n",(0,s.jsxs)(n.admonition,{type:"warning",children:[(0,s.jsxs)(n.p,{children:["As of version 4.8.4 of CP4D, deploying the CR for Watsonx Orchestrate can sometimes get hung up on a mongodb pod error. This can hold up the entire installation as documented ",(0,s.jsx)(n.a,{href:"https://www.ibm.com/docs/en/cloud-paks/cp-data/4.8.x?topic=limitations-watsonx-orchestrate#orchestrate-known-issues__db-pod-error__title__1",children:"here"})]}),(0,s.jsx)(n.p,{children:"If the deployment is hanging, run the following commands to verify the issue:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"oc exec -it -c mongodb-agent  mongodb-wo-mongo-ops-manager-db-0 -- /opt/scripts/readinessprobe\n"})}),(0,s.jsx)(n.p,{children:"This may return"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'panic: Get "[https://172.30.0.1:443/api/v1/namespaces/cpd-instance-1/pods/mongodb-wo-mongo-ops-manager-db-0](https://172.30.0.1/api/v1/namespaces/cpd-instance-1/pods/mongodb-wo-mongo-ops-manager-db-0)": dial tcp 172.30.0.1:443: i/o timeout\n'})}),(0,s.jsx)(n.p,{children:"Resolve the error by running the following:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'# Update opsmanager labels to allow access\noc patch opsmanager mongodb-wo-mongo-ops-manager --type merge --patch \'{"spec":{"applicationDatabase":{"podSpec":{"podTemplate":{"metadata":{"labels":{"wo.watsonx.ibm.com/external-access":"true"}}}}}}}\'\n# Delete existing sts to force re-rollout:\noc delete sts mongodb-wo-mongo-ops-manager-db\n'})})]}),"\n",(0,s.jsx)(n.h3,{id:"troubleshooting-watsonx-orchestrate-installation",children:"Troubleshooting WatsonX Orchestrate installation"}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.p,{children:'If the "apply-cr" command exhausts its retries without succeeding, there maybe in an issue with MongoDB.'}),(0,s.jsx)(n.p,{children:"This issue does not show a clear error in the pod or in the opsmanager CR. To confirm that the mongodb-wo-mongo-ops-manager-db pod error has occurred in the cluster, run the following command:\noc exec -it -c mongodb-agent  mongodb-wo-mongo-ops-manager-db-0 -- /opt/scripts/readinessprobe"}),(0,s.jsx)(n.p,{children:"If the error has occurred in the cluster, the following is displayed:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'panic: Get "https://172.30.0.1:443/api/v1/namespaces/cpd-instance-1/pods/mongodb-wo-mongo-ops-manager-db-0": dial tcp 172.30.0.1:443: i/o timeout\n'})}),(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Cause"})}),(0,s.jsx)(n.p,{children:"This error occurs in certain clusters when the MongoDB readinessprobe calls to the Kubernetes API are not supported by the network traffic."}),(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Solution"})}),(0,s.jsx)(n.p,{children:"To resolve this error, run the following commands:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'# Update opsmanager labels to allow access\noc patch opsmanager mongodb-wo-mongo-ops-manager --type merge --patch \'{"spec":{"applicationDatabase":{"podSpec":{"podTemplate":{"metadata":{"labels":{"wo.watsonx.ibm.com/external-access":"true"}}}}}}}\'\n# Delete existing sts to force re-rollout:\noc delete sts mongodb-wo-mongo-ops-manager-db\n'})})]})]})}function p(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>i});var s=t(7294);const a={},r=s.createContext(a);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);